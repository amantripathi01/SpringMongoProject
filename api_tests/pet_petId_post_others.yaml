# Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

# RoostTestHash=99d9f02040

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "pet_petId_post_others.csv"
    fields:
      - "petId"
      - "name"
      - "status"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Update pet with form data - failure cases"
    flow:
      - log: "Sending request with invalid URL"
        post:
          url: "/pet/invalid_url"
          headers:
            Authorization: "Bearer invalid_token"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "Pet name"
            status: "Unavailable"
          expect:
            - statusCode: 404
            - hasProperty: "message"
        think: 5

      - log: "Sending request without petId in path"
        post:
          url: "/pet/"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "Pet name"
            status: "Unavailable"
          expect:
            - statusCode: 405
            - hasProperty: "message"
        think: 5

      - log: "Sending request with non-existing petId"
        post:
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "Non-existing pet"
            status: "Unavailable"
          expect:
            - statusCode: 405
            - hasProperty: "message"
        think: 5

      - log: "Sending request without authorization header"
        post:
          url: "/pet/{{ petId }}"
          headers:
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "{{ name }}"
            status: "{{ status }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
        think: 5

      - log: "Sending request with invalid authorization token"
        post:
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "Bearer invalid_token"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "{{ name }}"
            status: "{{ status }}"
          expect:
            - statusCode: 403
            - hasProperty: "message"
        think: 5
