/*
Test generated by RoostGPT for test aman321 using AI Type Vertex AI and AI Model text-bison

 **Test Scenario 1: Validate the output of the toString() method for a valid student object.**

**Test Data:**
```
Student student = new Student();
student.set_id("123456");
student.setStudentname("John Doe");
student.setStudentaddress("123 Main Street");
student.setMobile("123-456-7890");
```

**Expected Output:**
```
"Student{_id='123456', studentname='John Doe', studentaddress='123 Main Street', mobile='123-456-7890'}"
```

**Test Scenario 2: Validate the output of the toString() method for a student object with null values.**

**Test Data:**
```
Student student = new Student();
student.set_id(null);
student.setStudentname(null);
student.setStudentaddress(null);
student.setMobile(null);
```

**Expected Output:**
```
"Student{_id=null, studentname=null, studentaddress=null, mobile=null}"
```

**Test Scenario 3: Validate the output of the toString() method for a student object with empty strings.**

**Test Data:**
```
Student student = new Student();
student.set_id("");
student.setStudentname("");
student.setStudentaddress("");
student.setMobile("");
```

**Expected Output:**
```
"Student{_id='', studentname='', studentaddress='', mobile='}"
```
*/
package com.example.SpringMongoProject.Entity;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class Student_toString_ceffa8036e_Test {

    @Test
    @DisplayName("Test Scenario 1: Valid student object")
    void testToString_validStudent() {
        // Given
        Student student = new Student();
        student.set_id("123456");
        student.setStudentname("John Doe");
        student.setStudentaddress("123 Main Street");
        student.setMobile("123-456-7890");

        // When
        String actualOutput = student.toString();

        // Then
        String expectedOutput = "Student{_id='123456', studentname='John Doe', studentaddress='123 Main Street', mobile='123-456-7890'}";
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @DisplayName("Test Scenario 2: Student object with null values")
    void testToString_nullValues() {
        // Given
        Student student = new Student();
        student.set_id(null);
        student.setStudentname(null);
        student.setStudentaddress(null);
        student.setMobile(null);

        // When
        String actualOutput = student.toString();

        // Then
        String expectedOutput = "Student{_id=null, studentname=null, studentaddress=null, mobile=null}";
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    @DisplayName("Test Scenario 3: Student object with empty strings")
    void testToString_emptyStrings() {
        // Given
        Student student = new Student();
        student.set_id("");
        student.setStudentname("");
        student.setStudentaddress("");
        student.setMobile("");

        // When
        String actualOutput = student.toString();

        // Then
        String expectedOutput = "Student{_id='', studentname='', studentaddress='', mobile='}";
        assertEquals(expectedOutput, actualOutput);
    }
}
