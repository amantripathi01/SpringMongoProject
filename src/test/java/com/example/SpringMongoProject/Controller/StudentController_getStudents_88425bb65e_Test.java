// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Controller;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Service.StudentServices;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.web.bind.annotation.PathVariable;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class StudentController_getStudents_88425bb65e_Test {

    @Mock
    private StudentServices studentServices;

    @InjectMocks
    private StudentController studentController;

    private Student student;

    @BeforeEach
    public void setUp() {
        student = new Student();
        student.set_id("1");
        student.setStudentname("John Doe");
        student.setStudentaddress("123 Street");
        student.setMobile("1234567890");
    }

    @Test
    public void testGetStudents_success() {
        when(studentServices.getStudentByID("1")).thenReturn(student);

        Student result = studentController.getStudents("1");

        assertEquals("1", result.get_id());
        assertEquals("John Doe", result.getStudentname());
        assertEquals("123 Street", result.getStudentaddress());
        assertEquals("1234567890", result.getMobile());
    }

    @Test
    public void testGetStudents_failure() {
        when(studentServices.getStudentByID("2")).thenReturn(null);

        Student result = studentController.getStudents("2");

        assertEquals(null, result);
    }
}
