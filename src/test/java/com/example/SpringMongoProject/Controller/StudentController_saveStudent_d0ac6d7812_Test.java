// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Controller;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Service.StudentServices;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.web.bind.annotation.RequestBody;

import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Assertions.assertEquals;

@SpringBootTest
public class StudentController_saveStudent_d0ac6d7812_Test {

    @InjectMocks
    StudentController studentController;

    @Mock
    StudentServices studentServices;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testSaveStudent_Success() {
        Student student = new Student();
        student.set_id("123");
        student.setStudentName("John");
        student.setStudentAddress("123 St");
        student.setMobile("1234567890");

        when(studentServices.saveorUpdate(student)).thenReturn(student);
        String result = studentController.saveStudent(student);
        verify(studentServices).saveorUpdate(student);
        assertEquals("123", result);
    }

    @Test
    public void testSaveStudent_Failure() {
        Student student = new Student();
        student.set_id("123");
        student.setStudentName("John");
        student.setStudentAddress("123 St");
        student.setMobile("1234567890");

        when(studentServices.saveorUpdate(student)).thenReturn(null);
        String result = studentController.saveStudent(student);
        verify(studentServices).saveorUpdate(student);
        assertEquals(null, result);
    }
}
