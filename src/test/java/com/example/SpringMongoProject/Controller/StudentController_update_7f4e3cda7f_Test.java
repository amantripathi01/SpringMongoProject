// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Controller;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Service.StudentServices;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class StudentController_update_7f4e3cda7f_Test {

    @InjectMocks
    StudentController studentController;

    @Mock
    StudentServices studentServices;

    @Test
    public void testUpdateStudent() {
        Student student = new Student();
        student.set_id("1");
        student.setStudentname("John");
        student.setStudentaddress("123 St");
        student.setMobile("1234567890");

        /* when(studentServices.saveorUpdate(any(Student.class))).thenAnswer(i -> i.getArguments()[0]);
 */
        Student updatedStudent = studentController.update(student, "1");

        assertEquals("1", updatedStudent.get_id());
        verify(studentServices, times(1)).saveorUpdate(student);
    }

    @Test
    public void testUpdateStudentWithDifferentId() {
        Student student = new Student();
        student.set_id("2");
        student.setStudentname("John");
        student.setStudentaddress("123 St");
        student.setMobile("1234567890");

       /*  when(studentServices.saveorUpdate(any(Student.class))).thenAnswer(i -> i.getArguments()[0]);
 */
        Student updatedStudent = studentController.update(student, "1");

        assertNotEquals("2", updatedStudent.get_id());
        assertEquals("1", updatedStudent.get_id());
        verify(studentServices, times(1)).saveorUpdate(student);
    }
}
