// Test generated by RoostGPT for test gitlab using AI Type Open AI and AI Model gpt-4-1106-preview

package com.example.SpringMongoProject.Service;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Repo.StudentRepo;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

@SpringBootTest
public class StudentServices_listAll_720f08e71b_Test {

    @Autowired
    private StudentServices studentServices;

    @MockBean
    private StudentRepo studentRepo;

    private List<Student> students;

    @BeforeEach
    public void setUp() {
        Student student1 = new Student(); // TODO: Set student1 properties
        Student student2 = new Student(); // TODO: Set student2 properties
        students = Arrays.asList(student1, student2);
        Mockito.when(studentRepo.findAll()).thenReturn(students);
    }

    @Test
    public void testListAll_StudentsFound() {
        Iterable<Student> foundStudents = studentServices.listAll();
        assertNotNull(foundStudents, "Expected not null iterable of students");
        assertEquals(students, foundStudents, "Expected and actual lists of students do not match");
    }

    @Test
    public void testListAll_NoStudentsFound() {
        Mockito.when(studentRepo.findAll()).thenReturn(Arrays.asList());
        Iterable<Student> foundStudents = studentServices.listAll();
        assertNotNull(foundStudents, "Expected not null iterable of students");
        assertEquals(Arrays.asList(), foundStudents, "Expected empty list when no students found");
    }
}
