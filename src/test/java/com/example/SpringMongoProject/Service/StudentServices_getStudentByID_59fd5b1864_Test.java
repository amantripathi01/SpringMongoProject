// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Service;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Repo.StudentRepo;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class StudentServices_getStudentByID_59fd5b1864_Test {

    @InjectMocks
    private StudentServices studentServices;

    @Mock
    private StudentRepo repo;

    private Student student;

    @BeforeEach
    public void setUp() {
        student = new Student();
        student.set_id("123");
        student.setStudentname("John Doe");
        student.setStudentaddress("123 Street");
        student.setMobile("1234567890");
    }

    @Test
    public void testGetStudentByID_Success() {
        // TODO: Replace the argument with actual student id
        String studentid = "123";
        when(repo.findById(studentid)).thenReturn(Optional.of(student));

        Student actual = studentServices.getStudentByID(studentid);

        assertEquals(student, actual);
    }

    @Test
    public void testGetStudentByID_NotFound() {
        // TODO: Replace the argument with actual student id
        String studentid = "456";
        when(repo.findById(studentid)).thenReturn(Optional.empty());

        Student actual = studentServices.getStudentByID(studentid);

        assertNull(actual);
    }
}
