// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Service;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Repo.StudentRepo;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import java.util.Optional;

@ExtendWith(MockitoExtension.class)
public class StudentServices_getStudentByID_59fd5b1864_Test {

    @Mock
    private StudentRepo repo;

    @InjectMocks
    private StudentServices studentServices;

    private Student student;

    @BeforeEach
    public void setup() {
        student = new Student();
        student.set_id("123");
        student.setStudentname("John Doe");
        student.setStudentaddress("123 Street");
        student.setMobile("1234567890");
    }

    @Test
    public void testGetStudentByID_Success() {
        when(repo.findById(anyString())).thenReturn(Optional.of(student));

        Student actualStudent = studentServices.getStudentByID("123");
        assertNotNull(actualStudent);
        assertEquals(student.get_id(), actualStudent.get_id());
        assertEquals(student.getStudentname(), actualStudent.getStudentname());
        assertEquals(student.getStudentaddress(), actualStudent.getStudentaddress());
        assertEquals(student.getMobile(), actualStudent.getMobile());
    }

    @Test
    public void testGetStudentByID_Failure() {
        when(repo.findById(anyString())).thenReturn(Optional.empty());

        assertThrows(RuntimeException.class, () -> {
            studentServices.getStudentByID("123");
        });
    }
}
