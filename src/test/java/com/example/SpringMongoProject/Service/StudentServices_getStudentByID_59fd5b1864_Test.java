// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Service;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Repo.StudentRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class StudentServices_getStudentByID_59fd5b1864_Test {

    @Mock
    private StudentRepo repo;

    @InjectMocks
    private StudentServices studentServices;

    @Test
    public void testGetStudentByID() {

        String studentId = "123"; // TODO: Change this to the actual student ID
        Student student = new Student();
        student.set_id(studentId);
        student.setStudentname("John Doe");
        student.setStudentaddress("123 Main St");
        student.setMobile("1234567890");
        
        when(repo.findById(studentId)).thenReturn(Optional.of(student));

        Student actual = studentServices.getStudentByID(studentId);

        assertEquals(student, actual);
        verify(repo, times(1)).findById(studentId);
    }

    @Test
    public void testGetStudentByID_NotFound() {

        String studentId = "123"; // TODO: Change this to the actual student ID

        when(repo.findById(studentId)).thenReturn(Optional.empty());

        assertThrows(NoSuchElementException.class, () -> {
            studentServices.getStudentByID(studentId);
        });
        verify(repo, times(1)).findById(studentId);
    }
}
