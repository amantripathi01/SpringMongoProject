// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package com.example.SpringMongoProject.Service;

import com.example.SpringMongoProject.Entity.Student;
import com.example.SpringMongoProject.Repo.StudentRepo;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@SpringBootTest
public class StudentServices_getStudentByID_59fd5b1864_Test {

    @Autowired
    private StudentServices studentServices;

    @MockBean
    private StudentRepo studentRepo;

    @Test
    public void testGetStudentByID_ExistingID() {
        Student student = new Student();
        student.set_id("12345");
        student.setStudentname("John Doe");
        student.setStudentaddress("123 Main St");
        student.setMobile("123-456-7890");

        when(studentRepo.findById("12345")).thenReturn(Optional.of(student));

        Student foundStudent = studentServices.getStudentByID("12345");

        assertEquals("12345", foundStudent.get_id());
        assertEquals("John Doe", foundStudent.getStudentname());
        assertEquals("123 Main St", foundStudent.getStudentaddress());
        assertEquals("123-456-7890", foundStudent.getMobile());
    }

    @Test
    public void testGetStudentByID_NonExistingID() {
        when(studentRepo.findById("67890")).thenReturn(Optional.empty());

        Student foundStudent = studentServices.getStudentByID("67890");

        assertEquals(null, foundStudent);
    }
}
