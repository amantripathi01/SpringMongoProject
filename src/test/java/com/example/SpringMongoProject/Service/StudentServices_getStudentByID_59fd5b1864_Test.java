/*
Test generated by RoostGPT for test aman321 using AI Type Open AI and AI Model gpt-4

1. Scenario: Verify that the function returns the correct student details when a valid student ID is provided.
   - Given a valid student ID,
   - When getStudentByID function is called with this ID,
   - Then the function should return the correct student details for this ID.

2. Scenario: Verify that the function throws an exception when an invalid student ID is provided.
   - Given an invalid student ID,
   - When getStudentByID function is called with this ID,
   - Then the function should throw a NoSuchElementException.

3. Scenario: Verify that the function throws an exception when a null student ID is provided.
   - Given a null student ID,
   - When getStudentByID function is called with this ID,
   - Then the function should throw an IllegalArgumentException.

4. Scenario: Verify that the function handles the scenario when the student does not exist in the database.
   - Given a student ID for a student that does not exist in the database,
   - When getStudentByID function is called with this ID,
   - Then the function should return null or throw a NoSuchElementException, depending on the implementation of the repo.findById method.

5. Scenario: Verify that the function handles the scenario when the database is not accessible.
   - Given a valid student ID, but the database is not accessible,
   - When getStudentByID function is called with this ID,
   - Then the function should throw a DataAccessResourceFailureException or a similar exception indicating a database access failure.

6. Scenario: Verify that the function handles the scenario when the database is empty.
   - Given a valid student ID, but the database is empty,
   - When getStudentByID function is called with this ID,
   - Then the function should return null or throw a NoSuchElementException, depending on the implementation of the repo.findById method. 

7. Scenario: Verify that the function can handle large student ID values.
   - Given a large valid student ID,
   - When getStudentByID function is called with this ID,
   - Then the function should return the correct student details for this ID or handle the exception appropriately if the ID is too large for the system to handle.

8. Scenario: Verify that the function can handle small student ID values.
   - Given a small valid student ID,
   - When getStudentByID function is called with this ID,
   - Then the function should return the correct student details for this ID or handle the exception appropriately if the ID is too small for the system to handle.
*/
@Test
public void testGetStudentByID_ValidID() {
    Student student = new Student();
    student.set_id("12345");
    when(studentRepo.findById("12345")).thenReturn(Optional.of(student));

    Student result = studentServices.getStudentByID("12345");

    assertNotNull(result);
    assertEquals("12345", result.get_id());
}

@Test
public void testGetStudentByID_InvalidID() {
    when(studentRepo.findById("12345")).thenReturn(Optional.empty());

    Student result = studentServices.getStudentByID("12345");

    assertNull(result);
}

@Test
public void testGetStudentByID_NullID() {
    assertThrows(IllegalArgumentException.class, () -> {
        studentServices.getStudentByID(null);
    });
}
