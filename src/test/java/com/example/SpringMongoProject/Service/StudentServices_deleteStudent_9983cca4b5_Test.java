/*
Test generated by RoostGPT for test aman321 using AI Type Open AI and AI Model gpt-4

1. Scenario: Delete Student with Valid ID
   - Given a valid Student ID
   - When the `deleteStudent` function is called with this ID
   - Then the Student with the corresponding ID should be deleted from the database
   - And the function should not return any errors

2. Scenario: Delete Student with Invalid ID
   - Given an invalid Student ID
   - When the `deleteStudent` function is called with this ID
   - Then the function should return an error indicating that the Student ID does not exist

3. Scenario: Delete Student with Null ID
   - Given a null Student ID
   - When the `deleteStudent` function is called with this ID
   - Then the function should return an error indicating that the Student ID is null

4. Scenario: Delete Student with ID of a Student that has already been deleted
   - Given a valid Student ID of a Student that has already been deleted
   - When the `deleteStudent` function is called with this ID
   - Then the function should return an error indicating that the Student ID does not exist

5. Scenario: Delete Student while the database is offline
   - Given a valid Student ID
   - And the database is offline
   - When the `deleteStudent` function is called with this ID
   - Then the function should return an error indicating that the database is unavailable

6. Scenario: Delete Student while the database is under high load
   - Given a valid Student ID
   - And the database is under high load
   - When the `deleteStudent` function is called with this ID
   - Then the function should still successfully delete the Student with the corresponding ID from the database
   - And the function should not return any errors.
*/
<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <scope>test</scope>
    </dependency>
</dependencies>
